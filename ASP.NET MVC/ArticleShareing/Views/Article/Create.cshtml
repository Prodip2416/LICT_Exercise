@model BDJArticle15.Models.article

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    tinymce.init({ selector: '#details' });
</script>


@using (Html.BeginForm()) 
{
    
    <div class="form-horizontal">
        <h4>article</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("categoryId", null,"Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        


        <div class="form-group">
            @Html.LabelFor(model => model.SubscriptionTypeId, "Subscription Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubscriptionTypeId", null,"Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubscriptionTypeId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label class = "control-label col-md-2">Article Details</label>
            <div class="col-md-10">
               <textarea name="details" id="details" class="form-control"></textarea>
                <span class="alert-danger" id="Edetails">@ViewBag.Edetails</span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
